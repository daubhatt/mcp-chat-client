spring:  # Database Configuration
  datasource:
    url: jdbc:mysql://ballast.proxy.rlwy.net:11831/railway
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: gNgnpukLJxwoSstPvHZdTPQylEBZHBfE
    hikari:
      idle-timeout: ${DATASOURCE_DB_CON_POOL_IDLE_TIMEOUT:1800000}
      maximum-pool-size: ${DATASOURCE_MAX_CON_POOL_SIZE:4}
      minimum-idle: ${DATASOURCE_MIN_CON_POOL_SIZE:2}
      connection-timeout: ${DATASOURCE_DB_COONECTION_TIMEOUT:30000}
      keepalive-time: ${DATASOURCE_DB_CON_POOL_KEEP_ALIVE_TIME:30000}
      leak-detection-threshold: ${DATASOURCE_DB_LEAK_DETECTION_THRESHOLD:50000}
      max-lifetime: ${DATASOURCE_DB_CON_POOL_MAX_LIFE_TIME:3600000}
      pool-name: mcp-client-datasource-pool
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  # Thymeleaf Configuration
  thymeleaf:
    cache: false
    mode: HTML
    encoding: UTF-8

# Spring AI Configuration
  application:
    name: mcp-chat-client
  main:
    web-application-type: reactive
    banner-mode: log
  ai:
    # Anthropic Configuration
    anthropic:
      api-key: ${ANTHROPIC_API_KEY:sk}
      chat:
        options:
          model: ${CLAUDE_MODEL_NAME:claude-3-5-haiku-latest}
          temperature: 0.1
    # MCP Configuration
    mcp:
      clients:
        banking-server:
          url: ${BANKING_SERVER_URL:http://localhost:8081}

  threads:
    virtual:
      enabled: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${app.oauth-server-url}/oauth2/jwks

app:
  oauth-server-url: ${OAUTH_SERVER_URL:http://127.0.0.1:9090}
  chat:
    max-history-size: 20
  mcp:
    session:
      # Cleanup idle sessions every 5 minutes (300 seconds)
      cleanup-interval: ${MCP_SESSION_CLEANUP_INTERVAL:300}
      # Sessions idle for more than 30 minutes (1800 seconds) will be closed
      max-idle-time: ${MCP_SESSION_MAX_IDLE_TIME:1800}

# Server Configuration
server:
  port: ${CLIENT_PORT:8080}
  servlet:
    context-path: /
  error:
    include-message: always
    include-binding-errors: always

logging:
  pattern:
    console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"
  level:
    org.springframework.ai: WARN
    org.springframework.web: WARN
    com.example.mcpchat: INFO        # Keep app logging minimal
    io.modelcontextprotocol: WARN    # Reduce MCP logging